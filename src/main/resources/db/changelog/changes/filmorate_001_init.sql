CREATE TABLE IF NOT EXISTS users
(
    id       BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name     VARCHAR(100)       NOT NULL,
    email    VARCHAR(100) UNIQUE,
    login    VARCHAR(50) UNIQUE NOT NULL,
    birthday DATE
);

CREATE TABLE IF NOT EXISTS user_friends
(
    user_id   BIGINT NOT NULL,
    friend_id BIGINT,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS films
(
    id           BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name         VARCHAR(100) NOT NULL,
    description  VARCHAR(255),
    release_date DATE         NOT NULL,
    duration     INTEGER      NOT NULL,
    rating_id    INTEGER
);

CREATE TABLE IF NOT EXISTS ratings
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(5) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS genres
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id  BIGINT NOT NULL,
    genre_id BIGINT NOT NULL,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS liked_films
(
    user_id BIGINT NOT NULL,
    film_id BIGINT,
    PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS review
(
    review_id BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    content VARCHAR(100) NOT NULL,
    is_positive BOOLEAN NOT NULL,
    user_id BIGINT NOT NULL,
    film_id BIGINT NOT NULL,
    useful INTEGER,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE
    );

CREATE TABLE IF NOT EXISTS liked_reviews
(
    review_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    estimation INTEGER NOT NULL,
    FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE,
    PRIMARY KEY (review_id, user_id)
    );

CREATE TABLE IF NOT EXISTS directors (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL
    );

CREATE TABLE IF NOT EXISTS film_directors (
    film_id  BIGINT NOT NULL,
    director_id BIGINT NOT NULL,
    PRIMARY KEY (film_id, director_id)
    );

CREATE TABLE IF NOT EXISTS feeds (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    timestamp TIMESTAMP NOT NULL,
    event_type VARCHAR(10) NOT NULL,
    operation VARCHAR(10) NOT NULL,
    user_id BIGINT NOT NULL,
    entity_id BIGINT NOT NULL
    );

ALTER TABLE user_friends
    ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE user_friends
    ADD FOREIGN KEY (friend_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE films
    ADD FOREIGN KEY (rating_id) REFERENCES ratings (id) ON DELETE CASCADE;

ALTER TABLE film_genres
    ADD FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE;

ALTER TABLE film_genres
    ADD FOREIGN KEY (genre_id) REFERENCES genres  ON DELETE CASCADE;

ALTER TABLE liked_films
    ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;
    
ALTER TABLE review
    ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE review
    ADD FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE;

ALTER TABLE liked_reviews
    ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE film_directors
    ADD FOREIGN KEY (film_id) REFERENCES films(id) ON DELETE CASCADE;

ALTER TABLE film_directors
    ADD FOREIGN KEY (director_id) REFERENCES directors(id) ON DELETE CASCADE;

ALTER TABLE feeds ADD
    FOREIGN KEY (user_id) REFERENCES users(id) ON DELETE CASCADE;
