CREATE TABLE IF NOT EXISTS users
(
    id       BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name     VARCHAR(100)       NOT NULL,
    email    VARCHAR(100) UNIQUE,
    login    VARCHAR(50) UNIQUE NOT NULL,
    birthday DATE
);

CREATE TABLE IF NOT EXISTS user_friends
(
    user_id   BIGINT NOT NULL,
    friend_id BIGINT,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS films
(
    id           BIGINT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
    name         VARCHAR(100) NOT NULL,
    description  VARCHAR(255),
    release_date DATE         NOT NULL,
    duration     INTEGER      NOT NULL,
    rating_id    INTEGER
);

CREATE TABLE IF NOT EXISTS ratings
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(5) NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS genres
(
    id   BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(20) NOT NULL
);

CREATE TABLE IF NOT EXISTS film_genres
(
    film_id  BIGINT NOT NULL,
    genre_id BIGINT NOT NULL,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS liked_films
(
    user_id BIGINT NOT NULL,
    film_id BIGINT,
    PRIMARY KEY (user_id, film_id)
);

ALTER TABLE user_friends
    ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE user_friends
    ADD FOREIGN KEY (friend_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE films
    ADD FOREIGN KEY (rating_id) REFERENCES ratings (id);

ALTER TABLE film_genres
    ADD FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE;

ALTER TABLE film_genres
    ADD FOREIGN KEY (genre_id) REFERENCES genres (id);

ALTER TABLE liked_films
    ADD FOREIGN KEY (user_id) REFERENCES users (id) ON DELETE CASCADE;

ALTER TABLE liked_films
    ADD FOREIGN KEY (film_id) REFERENCES films (id) ON DELETE CASCADE;
